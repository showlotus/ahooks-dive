{"version":3,"file":"useUnmount.CZgXdXDA.js","sources":["../../../source/life-cycle/useUnmount.tsx","../../../node_modules/.pnpm/ahooks@3.9.0_react-dom@19.1.1_react@19.1.1/node_modules/ahooks/es/useUnmount/index.js"],"sourcesContent":["import { useUnmount, useBoolean } from 'ahooks'\nimport React from 'react'\n\nconst MyComponent = () => {\n  useUnmount(() => {\n    console.log('mount')\n  })\n\n  return <div>Hello World</div>\n}\n\nexport default () => {\n  const [state, { toggle }] = useBoolean(false)\n\n  return (\n    <>\n      <button type=\"button\" onClick={toggle}>\n        {state ? 'unmount' : 'mount'}\n      </button>\n      {state && <MyComponent />}\n    </>\n  )\n}\n","import { useEffect } from 'react';\nimport useLatest from '../useLatest';\nimport { isFunction } from '../utils';\nimport isDev from '../utils/isDev';\nvar useUnmount = function (fn) {\n  if (isDev) {\n    if (!isFunction(fn)) {\n      console.error(\"useUnmount expected parameter is a function, got \".concat(typeof fn));\n    }\n  }\n  var fnRef = useLatest(fn);\n  useEffect(function () {\n    return function () {\n      fnRef.current();\n    };\n  }, []);\n};\nexport default useUnmount;"],"names":["MyComponent","fnRef","useLatest","useEffect","current","jsx","children","useUnmount","state","toggle","useBoolean","jsxs","Fragment","type","onClick"],"mappings":"sMAGA,MAAMA,EAAc,KCCH,IAMXC,EDFJ,OCEIA,EAAQC,EDND,QCOXC,EAAAA,UAAU,WACR,OAAO,WACLF,EAAMG,SACR,CACF,EAAG,MDPIC,IAAC,OAAIC,SAAA,iBAGdC,EAAe,KACb,MAAOC,GAAOC,OAAEA,IAAYC,IAE5B,OACEC,EAAAA,KAAAC,WAAA,CACEN,SAAA,CAAAD,EAAAA,IAAC,UAAOQ,KAAK,SAASC,QAASL,EAC5BH,SAAAE,EAAQ,UAAY,UAEtBA,SAAUR,EAAA,CAAA","x_google_ignoreList":[1]}