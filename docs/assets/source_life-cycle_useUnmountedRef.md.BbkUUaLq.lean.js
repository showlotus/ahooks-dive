const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/chunks/useUnmountedRef.B0XYk9S5.js","assets/chunks/jsx-runtime.DKusaIV_.js","assets/chunks/index.CrvAvMll.js","assets/chunks/framework.B2Nsdnpo.js"])))=>i.map(i=>d[i]);
import{p as s,D as e,v as a,V as n,C as i,c as t,o as l,ag as r,ah as p,G as h,ai as o,k,w as u}from"./chunks/framework.B2Nsdnpo.js";import{R as d,k as c,r as m,c as E}from"./chunks/index.CrvAvMll.js";const f=JSON.parse('{"title":"useUnmountedRef","description":"","frontmatter":{},"headers":[],"relativePath":"source/life-cycle/useUnmountedRef.md","filePath":"source/life-cycle/useUnmountedRef.md","lastUpdated":1757940936000}'),b={name:"source/life-cycle/useUnmountedRef.md"},g=Object.assign(b,{setup(f){const b=s(!0),g=e();return a(async()=>{g.value=(await n(async()=>{const{default:s}=await import("./chunks/useUnmountedRef.B0XYk9S5.js");return{default:s}},__vite__mapDeps([0,1,2,3]))).default}),(s,e)=>{const a=i("ClientOnly");return l(),t("div",null,[e[1]||(e[1]=r("",3)),p(h(k(d),null,null,512),[[o,b.value]]),h(a,null,{default:u(()=>[h(k(c),{title:"",description:"",locale:"",select:"vue",order:"vue,react,html",github:"",gitlab:"",theme:"",lightTheme:"",darkTheme:"",stackblitz:"%7B%22show%22%3Atrue%7D",codesandbox:"%7B%22show%22%3Atrue%7D",codeplayer:"%7B%22show%22%3Afalse%7D",files:"%7B%22vue%22%3A%7B%7D%2C%22react%22%3A%7B%7D%2C%22html%22%3A%7B%7D%7D",scope:"",htmlWriteWay:"write",visible:!0,onMount:e[0]||(e[0]=()=>{b.value=!1}),reactCode:k("import React, { useEffect, useState } from 'react'\nimport { useUnmountedRef } from 'ahooks'\n\nconst MyComponent = () => {\n  const unmountedRef = useUnmountedRef()\n  useEffect(() => {\n    setTimeout(() => {\n      if (!unmountedRef.current) {\n        console.log('component is alive')\n      } else {\n        console.log('component is unmounted')\n      }\n    }, 3000)\n  }, [])\n\n  return <p>Hello World!</p>\n}\n\nexport default () => {\n  const [state, setState] = useState(true)\n\n  return (\n    <>\n      <button type=\"button\" onClick={() => setState(!state)}>\n        {state ? 'unmount' : 'mount'}\n      </button>\n      {state && <MyComponent />}\n    </>\n  )\n}\n"),reactComponent:g.value,reactCreateRoot:k(E.createRoot),reactCreateElement:k(m.createElement)},null,8,["reactCode","reactComponent","reactCreateRoot","reactCreateElement"])]),_:1}),e[2]||(e[2]=r("",4))])}}});export{f as __pageData,g as default};
//# sourceMappingURL=source_life-cycle_useUnmountedRef.md.BbkUUaLq.js.map
