const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/chunks/useUnmountedRef.B0XYk9S5.js","assets/chunks/jsx-runtime.DKusaIV_.js","assets/chunks/index.CrvAvMll.js","assets/chunks/framework.B2Nsdnpo.js"])))=>i.map(i=>d[i]);
import{p as s,D as e,v as a,V as n,C as i,c as t,o as l,ag as r,ah as p,G as h,ai as o,k,w as u}from"./chunks/framework.B2Nsdnpo.js";import{R as d,k as c,r as m,c as E}from"./chunks/index.CrvAvMll.js";const f=JSON.parse('{"title":"useUnmountedRef","description":"","frontmatter":{},"headers":[],"relativePath":"source/life-cycle/useUnmountedRef.md","filePath":"source/life-cycle/useUnmountedRef.md","lastUpdated":1757940936000}'),b={name:"source/life-cycle/useUnmountedRef.md"},g=Object.assign(b,{setup(f){const b=s(!0),g=e();return a(async()=>{g.value=(await n(async()=>{const{default:s}=await import("./chunks/useUnmountedRef.B0XYk9S5.js");return{default:s}},__vite__mapDeps([0,1,2,3]))).default}),(s,e)=>{const a=i("ClientOnly");return l(),t("div",null,[e[1]||(e[1]=r('<h1 id="useunmountedref" tabindex="-1"><a href="https://ahooks.js.org/zh-CN/hooks/use-unmounted-ref#useunmountedref" target="_blank" rel="noreferrer">useUnmountedRef</a> <a class="header-anchor" href="#useunmountedref" aria-label="Permalink to &quot;[useUnmountedRef](https://ahooks.js.org/zh-CN/hooks/use-unmounted-ref#useunmountedref)&quot;">​</a></h1><h2 id="用法" tabindex="-1">用法 <a class="header-anchor" href="#用法" aria-label="Permalink to &quot;用法&quot;">​</a></h2><p>当前组件是否已经卸载。</p>',3)),p(h(k(d),null,null,512),[[o,b.value]]),h(a,null,{default:u(()=>[h(k(c),{title:"",description:"",locale:"",select:"vue",order:"vue,react,html",github:"",gitlab:"",theme:"",lightTheme:"",darkTheme:"",stackblitz:"%7B%22show%22%3Atrue%7D",codesandbox:"%7B%22show%22%3Atrue%7D",codeplayer:"%7B%22show%22%3Afalse%7D",files:"%7B%22vue%22%3A%7B%7D%2C%22react%22%3A%7B%7D%2C%22html%22%3A%7B%7D%7D",scope:"",htmlWriteWay:"write",visible:!0,onMount:e[0]||(e[0]=()=>{b.value=!1}),reactCode:k("import React, { useEffect, useState } from 'react'\nimport { useUnmountedRef } from 'ahooks'\n\nconst MyComponent = () => {\n  const unmountedRef = useUnmountedRef()\n  useEffect(() => {\n    setTimeout(() => {\n      if (!unmountedRef.current) {\n        console.log('component is alive')\n      } else {\n        console.log('component is unmounted')\n      }\n    }, 3000)\n  }, [])\n\n  return <p>Hello World!</p>\n}\n\nexport default () => {\n  const [state, setState] = useState(true)\n\n  return (\n    <>\n      <button type=\"button\" onClick={() => setState(!state)}>\n        {state ? 'unmount' : 'mount'}\n      </button>\n      {state && <MyComponent />}\n    </>\n  )\n}\n"),reactComponent:g.value,reactCreateRoot:k(E.createRoot),reactCreateElement:k(m.createElement)},null,8,["reactCode","reactComponent","reactCreateRoot","reactCreateElement"])]),_:1}),e[2]||(e[2]=r('<h2 id="源码" tabindex="-1"><a href="https://github.com/alibaba/hooks/blob/master/packages/hooks/src/useUnmountedRef/index.tsx" target="_blank" rel="noreferrer">源码</a> <a class="header-anchor" href="#源码" aria-label="Permalink to &quot;[源码](https://github.com/alibaba/hooks/blob/master/packages/hooks/src/useUnmountedRef/index.tsx)&quot;">​</a></h2><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-ckU0-" id="tab-5WnyJIk" checked><label data-title="useUnmountedRef.tsx" for="tab-5WnyJIk">useUnmountedRef.tsx</label></div><div class="blocks"><div class="language-tsx vp-adaptive-theme active line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">tsx</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { useEffect, useRef } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;react&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> useUnmountedRef</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> () </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> unmountedRef</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> useRef</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  useEffect</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    unmountedRef.current </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> () </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      unmountedRef.current </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    };</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }, []);</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> unmountedRef;</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">};</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> default</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> useUnmountedRef;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div></div></div><h2 id="解读" tabindex="-1">解读 <a class="header-anchor" href="#解读" aria-label="Permalink to &quot;解读&quot;">​</a></h2><p>使用 <code>useRef</code> 记录当前组件的卸载状态，初始值为 <code>false</code>，挂载时赋值为 <code>false</code>，卸载时赋值为 <code>true</code>，最后返回当前 <code>ref</code> 对象，用于判断组件是否已经卸载。</p>',4))])}}});export{f as __pageData,g as default};
//# sourceMappingURL=source_life-cycle_useUnmountedRef.md.BbkUUaLq.js.map
